{"version":3,"sources":["assets/spinner.svg","components/MainPage.js","components/Beer.js","components/About.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SingleBeer","props","beers","map","beer","react_default","a","createElement","className","key","id","data-id","name","tagline","src","concat","image_url","contributed_by","replace","split","first_brewed","ph","srm","ibu","volume","value","unit","react_router_dom","to","MainPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","allBeers","state","isLoading","_this2","self","requestInfo","method","headers","Headers","Content-type","fetch","then","response","ok","json","Error","setState","_this3","onClick","sort","b","MainPage_SingleBeer","spinner","Component","Beer","_ref","match","useEffect","fetchItem","console","log","_useState","useState","_useState2","slicedToArray","item","setItem","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","params","sent","stop","apply","arguments","alt","abv","attenuation_level","boil_volume","ebc","first_brew","description","food_pairing","food","About","Nav","App","components_Nav","react_router","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.172dab54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.09cfe256.svg\";","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport spinner from '../assets/spinner.svg'\nimport '../App.css';\n\nconst SingleBeer = (props) => {\n\n    return(\n        props.beers.map((beer) =>\n\n            <div className={'beer-link'} key={beer.id} data-id={beer.id}>\n                <div className=\"beer-link-top\">\n                    <h1 className={'beer-link--name'}>{beer.name}</h1>\n                    <p className={'beer-link-subtitle'}>{beer.tagline}</p>\n                </div>\n\n                <div className=\"beer-link--bottom\">\n                    <img className={'beer-link--img'} src={`${beer.image_url}`} />\n\n                    <div className=\"beer-link--right\">\n                        {\n                            beer.contributed_by ? <p className={'beer-link-info'}>Contributed by: {beer.contributed_by.replace(beer.contributed_by.split(' ')[2], '')}</p> : null\n                        }\n                        {\n                            beer.first_brewed ? <p className={'beer-link-info'}>First brewed: {beer.first_brewed}</p> : null\n                        }\n                        {\n                            beer.ph ? <p className={'beer-link-info'}>PH: {beer.ph}</p> : null\n                        }\n                        {\n                            beer.srm ? <p className={'beer-link-info'}>SRM: {beer.srm}</p> : null\n                        }\n                        {\n                            beer.ibu ? <p className={'beer-link-info'}>IBU: {beer.ibu}</p> : null\n                        }\n                        {\n                            beer.volume ? <p className={'beer-link-info'}>Volume: {beer.volume.value} {beer.volume.unit}</p> : null\n                        }\n                        \n                            <Link to={`/beer/${beer.id}`}>\n                                <button className=\"beer-link--read-more\">\n                                   Read More\n                                </button>\n                            </Link>\n                    </div>\n                </div>\n\n\n            </div>\n        )\n    )\n\n}\n\nclass MainPage extends Component {\n    constructor() {\n        super();\n        this.allBeers = [];\n        this.state = {\n            beers: '',\n            isLoading: true\n        };\n    }\n\n    componentDidMount() {\n        const self = this;\n\n        const requestInfo = {\n            method: 'GET',\n            headers: new Headers({\n                'Content-type': 'application/json',\n            })\n        }\n\n        fetch('https://api.punkapi.com/v2/beers', requestInfo)\n            .then(response => {\n                if(response.ok){\n                    return response.json();\n                } else {\n                    throw new Error('Request to get all beers failed');\n                }\n            })\n            .then(beers => {\n                self.allBeers = beers;\n                // console.log(beers);\n                this.setState({\n                    beers: beers\n                })\n\n                // console.log(this.state.beers);\n\n            });\n    }\n\n    render(){\n\n        const sortByName = () => {\n            this.setState({beers: this.state.beers.sort(function(a,b) {return (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0);} )})\n        }\n\n        const sortById = () => {\n            this.setState({beers: this.state.beers.sort(function(a,b) {return (a.id > b.id) ? 1 : ((b.id > a.id) ? -1 : 0);} )})\n        }\n\n        const sortByPh = () => {\n            this.setState({beers: this.state.beers.sort(function(a,b) {return (a.ph > b.ph) ? 1 : ((b.ph > a.ph) ? -1 : 0);} )})\n        }\n\n        const sortBySrm = () => {\n            this.setState({beers: this.state.beers.sort(function(a,b) {return (a.srm > b.srm) ? 1 : ((b.srm > a.srm) ? -1 : 0);} )})\n        }\n\n        const sortByIbu = () => {\n            this.setState({beers: this.state.beers.sort(function(a,b) {return (a.ibu > b.ibu) ? 1 : ((b.ibu > a.ibu) ? -1 : 0);} )})\n        }\n\n        return (\n            <div className=\"App\">\n                <div className=\"sort-buttons\">\n                    <button className={'sort-button'} onClick={sortByName}>sort by name</button>\n                    <button className={'sort-button'} onClick={sortByPh}>sort by ph</button>\n                    <button className={'sort-button'} onClick={sortBySrm}>sort by srm</button>\n                    <button className={'sort-button'} onClick={sortByIbu}>sort by ibu</button>\n                    <button className={'sort-button'} onClick={sortById}>reset</button>\n\n                </div>\n                <div className=\"beer-cards--wrapper\">\n                    {\n                        this.state.beers\n                            ? <SingleBeer\n                                beers={this.state.beers}\n                            />\n                            : <img className={'loading-spinner'} src={spinner}/>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MainPage;\n","import React, {useState, useEffect} from 'react';\nimport '../App.css';\nimport { BrowserRouter as Router, Route, Link, Switch} from \"react-router-dom\";\n\n\nfunction Beer({match}) {\n\n    useEffect(() => {\n        fetchItem();\n        console.log(match);\n    }, []);\n\n    const [item, setItem] = useState({});\n\n    const fetchItem = async () => {\n        const fetchItem = await fetch(\n            `https://api.punkapi.com/v2/beers/${match.params.id}`\n        );\n        const item = await fetchItem.json();\n        setItem(item[0]);\n        console.log(item);\n    }\n\n\n    return (\n        <div className='beer-full'>\n            <img src={`${item.image_url}`} alt=\"\"/>\n\n            <div className=\"beer-full-info--wrapper\">\n                <h1>{item.name}</h1>\n                {/*checking if the data exists*/}\n                {\n                    item.abv ? <p className=\"beer-full-info\">ABV: {item.abv}</p> : null\n                }\n                {\n                    item.attenuation_level ? <p className=\"beer-full-info\">Attenuation level: {item.attenuation_level}</p> : null\n                }\n                {\n                    item.boil_volume ? <p className=\"beer-full-info\">Boil volume: {item.boil_volume.value} {item.boil_volume.unit}</p> : null\n                }\n                {\n                    item.ebc ? <p className=\"beer-full-info\">EBC: {item.ebc}</p> : null\n                }\n                {\n                    item.first_brew ? <p className=\"beer-full-info\">First brew: {item.first_brew}</p> : null\n                }\n                {\n                    item.ibu ? <p className=\"beer-full-info\">IBU: {item.ibu}</p> : null\n                }\n                {\n                    item.ph ? <p className=\"beer-full-info\">PH: {item.ph}</p> : null\n                }\n                {\n                    item.srm ? <p className=\"beer-full-info\">SRM: {item.srm}</p> : null\n                }\n                {\n                    item.description ? <p className=\"beer-full-info\">{item.description}</p> : null\n                }\n                {\n                    item.food_pairing ? <p className=\"beer-full-info\">The best with:<ul>{item.food_pairing.map((food) => <li>{food}</li>)}</ul></p> : null\n                }\n                <Link to={'/'}><button className=\"beer-link--read-more beer--back-button\">go back</button></Link>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Beer;\n","import React from 'react';\nimport '../App.css';\n\nfunction About() {\n    return (\n        <div>\n            <h1>About</h1>\n        </div>\n    );\n}\n\nexport default About;\n","import React, {useState, useEffect} from 'react';\nimport '../App.css';\n\n\n\nfunction Nav() {\n\n    return (\n        <div className='navi'>\n            <h1>Punk Api</h1>\n        </div>\n    );\n}\n\nexport default Nav;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch} from \"react-router-dom\";\nimport './App.css';\nimport MainPage from './components/MainPage'\nimport Beer from './components/Beer'\nimport About from './components/About'\nimport Nav from './components/Nav'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.allBeers = [];\n    this.state = {\n      beers: '',\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    const self = this;\n\n    const requestInfo = {\n      method: 'GET',\n      headers: new Headers({\n        'Content-type': 'application/json',\n      })\n    }\n\n    fetch('https://api.punkapi.com/v2/beers', requestInfo)\n        .then(response => {\n          if(response.ok){\n            return response.json();\n          } else {\n            throw new Error('Request to get all beers failed');\n          }\n        })\n        .then(beers => {\n          self.allBeers = beers;\n          // console.log(beers);\n          this.setState({\n            beers: beers\n          })\n\n          // console.log(this.state.beers);\n\n        });\n  }\n\n  render(){\n\n    return (\n        <Router>\n            <Nav />\n            <div className=\"App\">\n                <Switch>\n                    <Route path='/' exact component={MainPage}/>\n                    <Route path='/beer/:id' component={Beer}/>\n                    <Route path='/about/' component={About}/>\n                </Switch>\n\n            </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}